
discovery.relabel "debug" {
targets = [
{
_meta_kubernetes_pod_labelpresent_name  = "true",
_meta_kubernetes_pod_phase  = "Running",
_meta_kubernetes_pod_container_port_number  = "8239",
_meta_kubernetes_pod_container_port_protocol  = "TCP",
_meta_kubernetes_pod_ip  = "10.132.47.120",
_meta_kubernetes_pod_container_id  = "containerd://3fbecbb3566123dd06c1d26b873e079aa0bfa6d90df38a64b1e07ad84ef2eac7",
_meta_kubernetes_pod_label_controller_revision_hash  = "84cd7b7f98",
_meta_kubernetes_pod_label_name  = "profiler",
_meta_kubernetes_pod_ready  = "true",
_meta_kubernetes_pod_annotation_cni_projectcalico_org_podIP  = "10.132.47.120/32",
__meta_kubernetes_pod_container_port_name  = "http-metrics",
__meta_kubernetes_pod_host_ip  = "10.128.0.214",
__meta_kubernetes_pod_labelpresent_pod_template_generation  = "true",
__meta_kubernetes_pod_annotationpresent_cni_projectcalico_org_containerID  = "true",
__meta_kubernetes_pod_annotation_cni_projectcalico_org_podIPs  = "10.132.47.120/32",
__meta_kubernetes_pod_annotation_profiles_grafana_com_ebpf  = "true",
__meta_kubernetes_pod_container_image  = "grafana/alloy-dev:v1.2.0-devel-c7998608f",
__meta_kubernetes_pod_name  = "profiler-fbgs2",
__meta_kubernetes_pod_uid  = "74c0e11a-1742-45f9-8d24-a4018d6f98c8",
__address__  = "10.132.47.120:8239",
__meta_kubernetes_pod_annotation_cni_projectcalico_org_containerID  = "33990b0eda8953595fbc22631ea703f756a4a23c409982d4f7782ebe85bd34c9",
__meta_kubernetes_pod_annotationpresent_cni_projectcalico_org_podIP  = "true",
__meta_kubernetes_pod_annotationpresent_cni_projectcalico_org_podIPs  = "true",
__meta_kubernetes_pod_container_init  = "false",
__meta_kubernetes_pod_container_name  = "profiler",
__meta_kubernetes_pod_controller_name  = "profiler",
__meta_kubernetes_pod_labelpresent_controller_revision_hash  = "true",
__meta_kubernetes_namespace  = "pyroscope-ebpf",
__meta_kubernetes_pod_annotationpresent_profiles_grafana_com_ebpf  = "true",
__meta_kubernetes_pod_controller_kind  = "DaemonSet",
__meta_kubernetes_pod_label_pod_template_generation  = "831",
__meta_kubernetes_pod_node_name  = "gke-dev-us-central-0-main-n2s16-3-1dd-9b502d96-jvqs",
},
]

 rule {
        action = "drop"
        regex = "Succeeded|Failed|Completed"
        source_labels = ["__meta_kubernetes_pod_phase"]
      }
      rule {
        action = "labelmap"
        regex = "__meta_kubernetes_pod_label_(.+)"
      }
      rule {
        action = "replace"
        regex = "(.*)@(.*)"
        replacement = "ebpf/${1}/${2}"
        separator = "@"
        source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
        target_label = "service_name"
      }
      rule {
        action = "replace"
        source_labels = ["__meta_kubernetes_namespace"]
        target_label = "namespace"
      }
      rule {
        action = "replace"
        source_labels = ["__meta_kubernetes_pod_name"]
        target_label = "pod"
      }
      rule {
        action = "replace"
        source_labels = ["__meta_kubernetes_pod_node_name"]
        target_label = "node"
      }
      rule {
        action = "replace"
        source_labels = ["__meta_kubernetes_pod_container_name"]
        target_label = "container"
      }
      rule {
        action = "replace"
        regex = "(.*)://(.*)"
        replacement = "${2}"
        source_labels = ["__meta_kubernetes_pod_container_id"]
        target_label = "__container_id__"
      }
      rule {
        action = "drop"
        regex = "(.*amixr.*(cloudsql-metrics|redis).*|.*kafka.*|.*cruise-control.*|.*pyroscope-rideshare-(dotnet|java|ruby).*|.*jmx-exporter.*|.*envoy.*|.*memcached.*|.*rabbitmq.*|.*oracle.*)"
        source_labels = ["service_name"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_ebpf"]
      }
      rule {
        action = "replace"
        regex = "ebpf/(.*amixr.*)/(.*amixr-engine.*)@(.*)"
        replacement = "ebpf/${1}/${2}/${3}"
        separator = "@"
        source_labels = ["service_name", "__meta_kubernetes_pod_label_name"]
        target_label = "service_name"
      }
      rule {
        action = "drop"
        regex = "(tempo-dev-01/cortex-gw|tempo-dev-01/distributor|tempo-dev-01/ingester|tempo-dev-01/metrics-generator|tempo-dev-01/metrics-instance-mapper|tempo-dev-01/querier|tempo-dev-01/query-frontend|tempo-dev-01/compactor|tempo-dev-01/vulture|faro/faro-api|faro/faro-collector|drone/drone-server|drone/drone-convert|gr-dev-01/querier|gr-dev-01/cortex-gw|otlp-gateway/otlp-gateway|agent-management/agent-management-api|flux-system/manager|alerting-ops/grafana|usage-service/analytics|usage-service/metrics-api|usage-service/usage-service|machine-learning/mlapi|machine-learning/sift|(alertmanager|alertmanager-pdt)/smtprelay|hosted-grafana/hgapi|hosted-grafana/hosted-grafana-gateway|hosted-grafana/istio-proxy|hosted-grafana/hosted-grafana-controller|hosted-grafana/smtprelay|hosted-grafana/private-datasource-connect|hosted-grafana/grafana-unified-storage|k6-cloud-insights-.*/controller|k6-cloud-insights-.*/forwarder|k6-cloud-insights-.*/querier|k6-cloud-insights-.*/writer|k6-cloud-insights-.*/ingester|k6-cloud-insights-.*/insights|hosted-exporters/grafana-agent|hosted-exporters/api|hosted-exporters/cloudwatch-exporter|hosted-exporters/confluent-auth-proxy|hosted-exporters/metrics-endpoint-auth-proxy|onboarding/api|grafana-ruler/grafana-ruler|o11y-apps-platform/kine|ge-metrics.*/admin-api|ge-metrics.*/alertmanager|ge-metrics.*/compactor|ge-metrics.*/distributor|ge-metrics.*/exporter|ge-metrics.*/gateway|ge-metrics.*/ingester|ge-metrics.*/overrides-exporter|ge-metrics.*/querier|ge-metrics.*/query-frontend|ge-metrics.*/query-scheduler|ge-metrics.*/rollout-operator|ge-metrics.*/ruler|ge-metrics.*/store-gateway|o11y-apps-platform/apiserver|hosted-grafana/grafana|grafana-apps/cloudconfig-grafana-app-fast|grafana-apps/cloudconfig-grafana-app-instant|(mimir|cortex).*/aggregator|(mimir|cortex).*/aggregator-cardinality-summary-querier|(mimir|cortex).*/aggregations-api|(mimir|cortex).*/compactor|(mimir|cortex).*/cortex-gw|(mimir|cortex).*/cortex-gw-internal|(mimir|cortex).*/distributor|(mimir|cortex).*/ingester|(mimir|cortex).*/mimir-backend|(mimir|cortex).*/mimir-read|(mimir|cortex).*/mimir-write|(mimir|cortex).*/querier|(mimir|cortex).*/query-frontend|(mimir|cortex).*/query-scheduler|(mimir|cortex).*/rollout-operator|(mimir|cortex).*/recommendations|(mimir|cortex).*/ruler|(mimir|cortex).*/ruler-querier|(mimir|cortex).*/ruler-query-frontend|(mimir|cortex).*/ruler-query-scheduler|(mimir|cortex).*/store-gateway|(mimir|cortex).*/warpstream-agent-jobs|(mimir|cortex).*/warpstream-agent-read|(mimir|cortex).*/warpstream-agent-write|loki-dev-005/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-dev-006/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-ops/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-ops-002/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-004/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-005/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-006/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-008/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-010/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-011/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-012/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-013/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-014/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-015/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-017/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-018/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-019/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-020/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod-021/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod2/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|loki-prod3/(bloom-compactor|bloom-gateway|cloud-logs-archiver|compactor|cortex-gw|distributor|index-gateway|ingester|parallel-querier|parallel-query-frontend|pattern-ingester|querier|query-frontend|query-scheduler|ruler|template-miner)|grafana-agent/(agent|grafana-agent)|jaeger/agent|pyroscope-ebpf/profiler|grafana-labels-app/grafana-labels-operator)"
        separator = "/"
        source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_container_name"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_process_cpu_scrape"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_goroutine_scrape"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_memory_scrape"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_mutex_scrape"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_block_scrape"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_godeltaprof_block_scrape"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_godeltaprof_memory_scrape"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_godeltaprof_mutex_scrape"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_fgprof_scrape"]
      }
      rule {
        action = "drop"
        regex = "true"
        source_labels = ["__meta_kubernetes_pod_annotation_profiles_grafana_com_cpu_scrape"]
      }
      rule {
        action = "labeldrop"
        regex = "__meta_kubernetes.*"
      }
}